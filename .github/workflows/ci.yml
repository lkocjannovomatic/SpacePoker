name: Godot CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  checks: write
  pull-requests: write

env:
  GODOT_VERSION: 4.5.1
  EXPORT_NAME: "SpacePoker"
  PROJECT_PATH: "."

jobs:
  test:
    name: Run GdUnit4 Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run GdUnit4 Tests
        uses: MikeSchulze/gdUnit4-action@v1.2.2
        with:
          godot-version: '4.5.1'
          paths: 'res://tests'
          timeout: 5
          retries: 3

  export-windows:
    name: Windows Export
    runs-on: ubuntu-24.04
    container:
      image: barichello/godot-ci:4.5.1
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Debug - List project files
        run: |
          echo "=== Project structure ==="
          ls -la
          echo ""
          echo "=== Export presets content ==="
          cat export_presets.cfg
          echo ""
          echo "=== Project.godot features ==="
          grep -A 5 "config/features" project.godot || echo "No features found"
          echo ""
          echo "=== Addons structure ==="
          ls -laR addons/ || echo "No addons folder"
          echo ""
          echo "=== GDExtension files content ==="
          find . -name "*.gdextension" -exec echo "File: {}" \; -exec cat {} \; || echo "No .gdextension files"
          echo ""
          echo "=== GDExtension binaries ==="
          find . -name "*.so" -o -name "*.dll" -o -name "*.dylib" | head -20
          
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      
      - name: Import project (validate resources)
        run: |
          echo "=== Importing project ==="
          godot --headless --verbose --editor --quit 2>&1 | tee import.log || true
          echo ""
          echo "=== Import log tail ==="
          tail -50 import.log
          echo ""
          echo "=== Checking .godot folder ==="
          ls -la .godot/ || echo "No .godot folder created"
          
      - name: List available export presets
        run: |
          echo "=== Available export presets ==="
          godot --headless --export-release 2>&1 | grep -i "preset\|platform\|export" || echo "Could not list presets"
          
      - name: Test - Disable GDExtension temporarily
        run: |
          echo "=== Temporarily disabling godot_llm extension ==="
          if [ -f "addons/godot_llm/godot_llm.gdextension" ]; then
            mv addons/godot_llm/godot_llm.gdextension addons/godot_llm/godot_llm.gdextension.disabled
            echo "GDExtension disabled for testing"
          fi
          echo ""
          echo "=== Testing export without GDExtension ==="
          mkdir -v -p build/test
          godot --headless --export-debug "Windows Desktop" "build/test/test.exe" 2>&1 | tail -50 || {
            echo "Export failed even without GDExtension - different issue"
            # Re-enable it
            if [ -f "addons/godot_llm/godot_llm.gdextension.disabled" ]; then
              mv addons/godot_llm/godot_llm.gdextension.disabled addons/godot_llm/godot_llm.gdextension
            fi
            exit 1
          }
          echo ""
          echo "=== Export succeeded without GDExtension! Re-enabling it ==="
          if [ -f "addons/godot_llm/godot_llm.gdextension.disabled" ]; then
            mv addons/godot_llm/godot_llm.gdextension.disabled addons/godot_llm/godot_llm.gdextension
          fi
          
      - name: Windows Build
        run: |
          echo "=== Creating output directory ==="
          mkdir -v -p build/windows
          echo ""
          echo "=== Starting export (this is where it crashes) ==="
          echo "Command: godot --headless --verbose --export-debug \"Windows Desktop\" \"build/windows/$EXPORT_NAME.exe\""
          godot --headless --verbose --export-debug "Windows Desktop" "build/windows/$EXPORT_NAME.exe" 2>&1 | tee export.log || {
            echo ""
            echo "=== EXPORT FAILED - Last 100 lines of output ==="
            tail -100 export.log
            echo ""
            echo "=== Checking for core dump ==="
            ls -lh core* 2>/dev/null || echo "No core dump found"
            exit 1
          }
          
      - name: Verify Build
        run: |
          echo "Build contents:"
          ls -lh build/windows/
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows
